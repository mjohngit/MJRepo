//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HotelMotel.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ExternalUsersMasterEntities : DbContext
    {
        public ExternalUsersMasterEntities()
            : base("name=ExternalUsersMasterEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<pr_CheckLoginLocalGov_Result> CheckLoginGovs(string login, string password, string overridetype, Nullable<bool> debug)
        {
            var loginParameter = login != null ?
                new ObjectParameter("login", login) :
                new ObjectParameter("login", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var overridetypeParameter = overridetype != null ?
                new ObjectParameter("overridetype", overridetype) :
                new ObjectParameter("overridetype", typeof(string));
    
            var debugParameter = debug.HasValue ?
                new ObjectParameter("debug", debug) :
                new ObjectParameter("debug", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pr_CheckLoginLocalGov_Result>("CheckLoginGovs", loginParameter, passwordParameter, overridetypeParameter, debugParameter);
        }
    }
}
