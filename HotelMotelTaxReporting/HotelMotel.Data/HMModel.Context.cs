//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HotelMotel.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class HotelMotelTaxEntities : DbContext
    {
        public HotelMotelTaxEntities()
            : base("name=HotelMotelTaxEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<HMT_Certifications> HMT_Certifications { get; set; }
        public virtual DbSet<HMT_PCIS_Docs> HMT_PCIS_Docs { get; set; }
    
        public virtual int pr_Update_P1(string cicoid, string fiscalYear, string atCode, Nullable<bool> p1Complete, Nullable<bool> ordCorrect, Nullable<bool> shortTermRentals)
        {
            var cicoidParameter = cicoid != null ?
                new ObjectParameter("cicoid", cicoid) :
                new ObjectParameter("cicoid", typeof(string));
    
            var fiscalYearParameter = fiscalYear != null ?
                new ObjectParameter("fiscalYear", fiscalYear) :
                new ObjectParameter("fiscalYear", typeof(string));
    
            var atCodeParameter = atCode != null ?
                new ObjectParameter("atCode", atCode) :
                new ObjectParameter("atCode", typeof(string));
    
            var p1CompleteParameter = p1Complete.HasValue ?
                new ObjectParameter("p1Complete", p1Complete) :
                new ObjectParameter("p1Complete", typeof(bool));
    
            var ordCorrectParameter = ordCorrect.HasValue ?
                new ObjectParameter("ordCorrect", ordCorrect) :
                new ObjectParameter("ordCorrect", typeof(bool));
    
            var shortTermRentalsParameter = shortTermRentals.HasValue ?
                new ObjectParameter("shortTermRentals", shortTermRentals) :
                new ObjectParameter("shortTermRentals", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pr_Update_P1", cicoidParameter, fiscalYearParameter, atCodeParameter, p1CompleteParameter, ordCorrectParameter, shortTermRentalsParameter);
        }
    
        public virtual int pr_Update_PA(string cicoid, string fiscalYear, string atCode, string pCode, Nullable<int> amount)
        {
            var cicoidParameter = cicoid != null ?
                new ObjectParameter("cicoid", cicoid) :
                new ObjectParameter("cicoid", typeof(string));
    
            var fiscalYearParameter = fiscalYear != null ?
                new ObjectParameter("fiscalYear", fiscalYear) :
                new ObjectParameter("fiscalYear", typeof(string));
    
            var atCodeParameter = atCode != null ?
                new ObjectParameter("atCode", atCode) :
                new ObjectParameter("atCode", typeof(string));
    
            var pCodeParameter = pCode != null ?
                new ObjectParameter("pCode", pCode) :
                new ObjectParameter("pCode", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pr_Update_PA", cicoidParameter, fiscalYearParameter, atCodeParameter, pCodeParameter, amountParameter);
        }
    
        public virtual int FillPurposeAmts(string cicoid, string fiscalYear, string atCode)
        {
            var cicoidParameter = cicoid != null ?
                new ObjectParameter("cicoid", cicoid) :
                new ObjectParameter("cicoid", typeof(string));
    
            var fiscalYearParameter = fiscalYear != null ?
                new ObjectParameter("fiscalYear", fiscalYear) :
                new ObjectParameter("fiscalYear", typeof(string));
    
            var atCodeParameter = atCode != null ?
                new ObjectParameter("atCode", atCode) :
                new ObjectParameter("atCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FillPurposeAmts", cicoidParameter, fiscalYearParameter, atCodeParameter);
        }
    
        public virtual ObjectResult<FetchPurposeAmts> FetchPurposeAmts(string cicoid, string fiscalYear, string atCode)
        {
            var cicoidParameter = cicoid != null ?
                new ObjectParameter("cicoid", cicoid) :
                new ObjectParameter("cicoid", typeof(string));
    
            var fiscalYearParameter = fiscalYear != null ?
                new ObjectParameter("fiscalYear", fiscalYear) :
                new ObjectParameter("fiscalYear", typeof(string));
    
            var atCodeParameter = atCode != null ?
                new ObjectParameter("atCode", atCode) :
                new ObjectParameter("atCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FetchPurposeAmts>("FetchPurposeAmts", cicoidParameter, fiscalYearParameter, atCodeParameter);
        }
    
        public virtual int UpdatePurposeAmts(string cicoid, string fiscalYear, string atCode, string pCode, Nullable<int> amount)
        {
            var cicoidParameter = cicoid != null ?
                new ObjectParameter("cicoid", cicoid) :
                new ObjectParameter("cicoid", typeof(string));
    
            var fiscalYearParameter = fiscalYear != null ?
                new ObjectParameter("fiscalYear", fiscalYear) :
                new ObjectParameter("fiscalYear", typeof(string));
    
            var atCodeParameter = atCode != null ?
                new ObjectParameter("atCode", atCode) :
                new ObjectParameter("atCode", typeof(string));
    
            var pCodeParameter = pCode != null ?
                new ObjectParameter("pCode", pCode) :
                new ObjectParameter("pCode", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePurposeAmts", cicoidParameter, fiscalYearParameter, atCodeParameter, pCodeParameter, amountParameter);
        }
    
        public virtual ObjectResult<GetDMOContracts> GetDMOContracts(string cicoid, string fiscalYear, string atCode)
        {
            var cicoidParameter = cicoid != null ?
                new ObjectParameter("cicoid", cicoid) :
                new ObjectParameter("cicoid", typeof(string));
    
            var fiscalYearParameter = fiscalYear != null ?
                new ObjectParameter("fiscalYear", fiscalYear) :
                new ObjectParameter("fiscalYear", typeof(string));
    
            var atCodeParameter = atCode != null ?
                new ObjectParameter("atCode", atCode) :
                new ObjectParameter("atCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDMOContracts>("GetDMOContracts", cicoidParameter, fiscalYearParameter, atCodeParameter);
        }
    
        public virtual ObjectResult<GetParkContracts> GetParkContracts(string cicoid, string fiscalYear, string atCode)
        {
            var cicoidParameter = cicoid != null ?
                new ObjectParameter("cicoid", cicoid) :
                new ObjectParameter("cicoid", typeof(string));
    
            var fiscalYearParameter = fiscalYear != null ?
                new ObjectParameter("fiscalYear", fiscalYear) :
                new ObjectParameter("fiscalYear", typeof(string));
    
            var atCodeParameter = atCode != null ?
                new ObjectParameter("atCode", atCode) :
                new ObjectParameter("atCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetParkContracts>("GetParkContracts", cicoidParameter, fiscalYearParameter, atCodeParameter);
        }
    
        public virtual ObjectResult<UpdateDMOContracts> UpdateDMOContracts(string cicoid, string fiscalYear, string atCode, Nullable<int> contractID, string entity, Nullable<byte> updateType)
        {
            var cicoidParameter = cicoid != null ?
                new ObjectParameter("cicoid", cicoid) :
                new ObjectParameter("cicoid", typeof(string));
    
            var fiscalYearParameter = fiscalYear != null ?
                new ObjectParameter("fiscalYear", fiscalYear) :
                new ObjectParameter("fiscalYear", typeof(string));
    
            var atCodeParameter = atCode != null ?
                new ObjectParameter("atCode", atCode) :
                new ObjectParameter("atCode", typeof(string));
    
            var contractIDParameter = contractID.HasValue ?
                new ObjectParameter("contractID", contractID) :
                new ObjectParameter("contractID", typeof(int));
    
            var entityParameter = entity != null ?
                new ObjectParameter("entity", entity) :
                new ObjectParameter("entity", typeof(string));
    
            var updateTypeParameter = updateType.HasValue ?
                new ObjectParameter("updateType", updateType) :
                new ObjectParameter("updateType", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UpdateDMOContracts>("UpdateDMOContracts", cicoidParameter, fiscalYearParameter, atCodeParameter, contractIDParameter, entityParameter, updateTypeParameter);
        }
    
        public virtual ObjectResult<UpdateParksContracts> UpdateParksContracts(string cicoid, string fiscalYear, string atCode, Nullable<int> contractID, string entity, Nullable<byte> updateType)
        {
            var cicoidParameter = cicoid != null ?
                new ObjectParameter("cicoid", cicoid) :
                new ObjectParameter("cicoid", typeof(string));
    
            var fiscalYearParameter = fiscalYear != null ?
                new ObjectParameter("fiscalYear", fiscalYear) :
                new ObjectParameter("fiscalYear", typeof(string));
    
            var atCodeParameter = atCode != null ?
                new ObjectParameter("atCode", atCode) :
                new ObjectParameter("atCode", typeof(string));
    
            var contractIDParameter = contractID.HasValue ?
                new ObjectParameter("contractID", contractID) :
                new ObjectParameter("contractID", typeof(int));
    
            var entityParameter = entity != null ?
                new ObjectParameter("entity", entity) :
                new ObjectParameter("entity", typeof(string));
    
            var updateTypeParameter = updateType.HasValue ?
                new ObjectParameter("updateType", updateType) :
                new ObjectParameter("updateType", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UpdateParksContracts>("UpdateParksContracts", cicoidParameter, fiscalYearParameter, atCodeParameter, contractIDParameter, entityParameter, updateTypeParameter);
        }
    
        public virtual ObjectResult<pr_Get_Certification_Result> pr_Get_Certification(string cicoid, string fiscalYear, string atCode)
        {
            var cicoidParameter = cicoid != null ?
                new ObjectParameter("cicoid", cicoid) :
                new ObjectParameter("cicoid", typeof(string));
    
            var fiscalYearParameter = fiscalYear != null ?
                new ObjectParameter("fiscalYear", fiscalYear) :
                new ObjectParameter("fiscalYear", typeof(string));
    
            var atCodeParameter = atCode != null ?
                new ObjectParameter("atCode", atCode) :
                new ObjectParameter("atCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pr_Get_Certification_Result>("pr_Get_Certification", cicoidParameter, fiscalYearParameter, atCodeParameter);
        }
    
        public virtual ObjectResult<pr_Get_Facilities_Result> pr_Get_Facilities(string cicoid, string fiscalYear, string atCode)
        {
            var cicoidParameter = cicoid != null ?
                new ObjectParameter("cicoid", cicoid) :
                new ObjectParameter("cicoid", typeof(string));
    
            var fiscalYearParameter = fiscalYear != null ?
                new ObjectParameter("fiscalYear", fiscalYear) :
                new ObjectParameter("fiscalYear", typeof(string));
    
            var atCodeParameter = atCode != null ?
                new ObjectParameter("atCode", atCode) :
                new ObjectParameter("atCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pr_Get_Facilities_Result>("pr_Get_Facilities", cicoidParameter, fiscalYearParameter, atCodeParameter);
        }
    
        public virtual ObjectResult<FetchPcisList> FetchPcisList(string cicoid, string fiscalYear, string atCode)
        {
            var cicoidParameter = cicoid != null ?
                new ObjectParameter("cicoid", cicoid) :
                new ObjectParameter("cicoid", typeof(string));
    
            var fiscalYearParameter = fiscalYear != null ?
                new ObjectParameter("fiscalYear", fiscalYear) :
                new ObjectParameter("fiscalYear", typeof(string));
    
            var atCodeParameter = atCode != null ?
                new ObjectParameter("atCode", atCode) :
                new ObjectParameter("atCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FetchPcisList>("FetchPcisList", cicoidParameter, fiscalYearParameter, atCodeParameter);
        }
    
        public virtual ObjectResult<FetchProjectStatusList> FetchProjectStatusList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FetchProjectStatusList>("FetchProjectStatusList");
        }
    
        public virtual ObjectResult<FetchProjectList> FetchProjectList(string cicoid, string fiscalYear, string atCode)
        {
            var cicoidParameter = cicoid != null ?
                new ObjectParameter("cicoid", cicoid) :
                new ObjectParameter("cicoid", typeof(string));
    
            var fiscalYearParameter = fiscalYear != null ?
                new ObjectParameter("fiscalYear", fiscalYear) :
                new ObjectParameter("fiscalYear", typeof(string));
    
            var atCodeParameter = atCode != null ?
                new ObjectParameter("atCode", atCode) :
                new ObjectParameter("atCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FetchProjectList>("FetchProjectList", cicoidParameter, fiscalYearParameter, atCodeParameter);
        }
    
        public virtual int pr_Prefill_Certs(string fiscalYear)
        {
            var fiscalYearParameter = fiscalYear != null ?
                new ObjectParameter("fiscalYear", fiscalYear) :
                new ObjectParameter("fiscalYear", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pr_Prefill_Certs", fiscalYearParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> pr_Update_Facilities(string cicoid, string fiscalYear, string atCode, Nullable<int> facilityID, string facility, Nullable<int> capacity, Nullable<byte> updateType)
        {
            var cicoidParameter = cicoid != null ?
                new ObjectParameter("cicoid", cicoid) :
                new ObjectParameter("cicoid", typeof(string));
    
            var fiscalYearParameter = fiscalYear != null ?
                new ObjectParameter("fiscalYear", fiscalYear) :
                new ObjectParameter("fiscalYear", typeof(string));
    
            var atCodeParameter = atCode != null ?
                new ObjectParameter("atCode", atCode) :
                new ObjectParameter("atCode", typeof(string));
    
            var facilityIDParameter = facilityID.HasValue ?
                new ObjectParameter("facilityID", facilityID) :
                new ObjectParameter("facilityID", typeof(int));
    
            var facilityParameter = facility != null ?
                new ObjectParameter("facility", facility) :
                new ObjectParameter("facility", typeof(string));
    
            var capacityParameter = capacity.HasValue ?
                new ObjectParameter("capacity", capacity) :
                new ObjectParameter("capacity", typeof(int));
    
            var updateTypeParameter = updateType.HasValue ?
                new ObjectParameter("updateType", updateType) :
                new ObjectParameter("updateType", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("pr_Update_Facilities", cicoidParameter, fiscalYearParameter, atCodeParameter, facilityIDParameter, facilityParameter, capacityParameter, updateTypeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> UpdateFormBStatus(string cicoid, string fiscalYear, string atCode, Nullable<bool> p2Complete)
        {
            var cicoidParameter = cicoid != null ?
                new ObjectParameter("cicoid", cicoid) :
                new ObjectParameter("cicoid", typeof(string));
    
            var fiscalYearParameter = fiscalYear != null ?
                new ObjectParameter("fiscalYear", fiscalYear) :
                new ObjectParameter("fiscalYear", typeof(string));
    
            var atCodeParameter = atCode != null ?
                new ObjectParameter("atCode", atCode) :
                new ObjectParameter("atCode", typeof(string));
    
            var p2CompleteParameter = p2Complete.HasValue ?
                new ObjectParameter("p2Complete", p2Complete) :
                new ObjectParameter("p2Complete", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("UpdateFormBStatus", cicoidParameter, fiscalYearParameter, atCodeParameter, p2CompleteParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> UpdatePcis(string cicoid, string fiscalYear, string atCode, Nullable<int> pcisID, string entity, string entityProjectName, string promotionItems, Nullable<int> expenditureAmount, Nullable<byte> updateType)
        {
            var cicoidParameter = cicoid != null ?
                new ObjectParameter("cicoid", cicoid) :
                new ObjectParameter("cicoid", typeof(string));
    
            var fiscalYearParameter = fiscalYear != null ?
                new ObjectParameter("fiscalYear", fiscalYear) :
                new ObjectParameter("fiscalYear", typeof(string));
    
            var atCodeParameter = atCode != null ?
                new ObjectParameter("atCode", atCode) :
                new ObjectParameter("atCode", typeof(string));
    
            var pcisIDParameter = pcisID.HasValue ?
                new ObjectParameter("pcisID", pcisID) :
                new ObjectParameter("pcisID", typeof(int));
    
            var entityParameter = entity != null ?
                new ObjectParameter("entity", entity) :
                new ObjectParameter("entity", typeof(string));
    
            var entityProjectNameParameter = entityProjectName != null ?
                new ObjectParameter("entityProjectName", entityProjectName) :
                new ObjectParameter("entityProjectName", typeof(string));
    
            var promotionItemsParameter = promotionItems != null ?
                new ObjectParameter("promotionItems", promotionItems) :
                new ObjectParameter("promotionItems", typeof(string));
    
            var expenditureAmountParameter = expenditureAmount.HasValue ?
                new ObjectParameter("expenditureAmount", expenditureAmount) :
                new ObjectParameter("expenditureAmount", typeof(int));
    
            var updateTypeParameter = updateType.HasValue ?
                new ObjectParameter("updateType", updateType) :
                new ObjectParameter("updateType", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("UpdatePcis", cicoidParameter, fiscalYearParameter, atCodeParameter, pcisIDParameter, entityParameter, entityProjectNameParameter, promotionItemsParameter, expenditureAmountParameter, updateTypeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> UpdateProjects(string cicoid, string fiscalYear, string atCode, Nullable<int> projectID, string description, string status, Nullable<byte> updateType)
        {
            var cicoidParameter = cicoid != null ?
                new ObjectParameter("cicoid", cicoid) :
                new ObjectParameter("cicoid", typeof(string));
    
            var fiscalYearParameter = fiscalYear != null ?
                new ObjectParameter("fiscalYear", fiscalYear) :
                new ObjectParameter("fiscalYear", typeof(string));
    
            var atCodeParameter = atCode != null ?
                new ObjectParameter("atCode", atCode) :
                new ObjectParameter("atCode", typeof(string));
    
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("projectID", projectID) :
                new ObjectParameter("projectID", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var updateTypeParameter = updateType.HasValue ?
                new ObjectParameter("updateType", updateType) :
                new ObjectParameter("updateType", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("UpdateProjects", cicoidParameter, fiscalYearParameter, atCodeParameter, projectIDParameter, descriptionParameter, statusParameter, updateTypeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> lstProjectResults(string cicoid, string fiscalYear, string atCode, Nullable<bool> p3Complete)
        {
            var cicoidParameter = cicoid != null ?
                new ObjectParameter("cicoid", cicoid) :
                new ObjectParameter("cicoid", typeof(string));
    
            var fiscalYearParameter = fiscalYear != null ?
                new ObjectParameter("fiscalYear", fiscalYear) :
                new ObjectParameter("fiscalYear", typeof(string));
    
            var atCodeParameter = atCode != null ?
                new ObjectParameter("atCode", atCode) :
                new ObjectParameter("atCode", typeof(string));
    
            var p3CompleteParameter = p3Complete.HasValue ?
                new ObjectParameter("p3Complete", p3Complete) :
                new ObjectParameter("p3Complete", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("lstProjectResults", cicoidParameter, fiscalYearParameter, atCodeParameter, p3CompleteParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> UpdateFormCStatus(string cicoid, string fiscalYear, string atCode, Nullable<bool> p3Complete)
        {
            var cicoidParameter = cicoid != null ?
                new ObjectParameter("cicoid", cicoid) :
                new ObjectParameter("cicoid", typeof(string));
    
            var fiscalYearParameter = fiscalYear != null ?
                new ObjectParameter("fiscalYear", fiscalYear) :
                new ObjectParameter("fiscalYear", typeof(string));
    
            var atCodeParameter = atCode != null ?
                new ObjectParameter("atCode", atCode) :
                new ObjectParameter("atCode", typeof(string));
    
            var p3CompleteParameter = p3Complete.HasValue ?
                new ObjectParameter("p3Complete", p3Complete) :
                new ObjectParameter("p3Complete", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("UpdateFormCStatus", cicoidParameter, fiscalYearParameter, atCodeParameter, p3CompleteParameter);
        }
    
        public virtual ObjectResult<GetCertification> GetCertification(string cicoid, string fiscalYear, string atCode)
        {
            var cicoidParameter = cicoid != null ?
                new ObjectParameter("cicoid", cicoid) :
                new ObjectParameter("cicoid", typeof(string));
    
            var fiscalYearParameter = fiscalYear != null ?
                new ObjectParameter("fiscalYear", fiscalYear) :
                new ObjectParameter("fiscalYear", typeof(string));
    
            var atCodeParameter = atCode != null ?
                new ObjectParameter("atCode", atCode) :
                new ObjectParameter("atCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCertification>("GetCertification", cicoidParameter, fiscalYearParameter, atCodeParameter);
        }
    
        public virtual int UpdateCertification(string cicoid, string fiscalYear, string atCode, Nullable<bool> certComplete, Nullable<System.DateTime> dateCertified, string cEOName, string cEOTitle, string preparerName, string preparerTitle, string preparerPhone, string preparerEmail, string pCISProviderName, string pCISProviderTitle, string pCISProviderPhone, string pCISProviderEmail)
        {
            var cicoidParameter = cicoid != null ?
                new ObjectParameter("cicoid", cicoid) :
                new ObjectParameter("cicoid", typeof(string));
    
            var fiscalYearParameter = fiscalYear != null ?
                new ObjectParameter("fiscalYear", fiscalYear) :
                new ObjectParameter("fiscalYear", typeof(string));
    
            var atCodeParameter = atCode != null ?
                new ObjectParameter("atCode", atCode) :
                new ObjectParameter("atCode", typeof(string));
    
            var certCompleteParameter = certComplete.HasValue ?
                new ObjectParameter("certComplete", certComplete) :
                new ObjectParameter("certComplete", typeof(bool));
    
            var dateCertifiedParameter = dateCertified.HasValue ?
                new ObjectParameter("dateCertified", dateCertified) :
                new ObjectParameter("dateCertified", typeof(System.DateTime));
    
            var cEONameParameter = cEOName != null ?
                new ObjectParameter("CEOName", cEOName) :
                new ObjectParameter("CEOName", typeof(string));
    
            var cEOTitleParameter = cEOTitle != null ?
                new ObjectParameter("CEOTitle", cEOTitle) :
                new ObjectParameter("CEOTitle", typeof(string));
    
            var preparerNameParameter = preparerName != null ?
                new ObjectParameter("preparerName", preparerName) :
                new ObjectParameter("preparerName", typeof(string));
    
            var preparerTitleParameter = preparerTitle != null ?
                new ObjectParameter("preparerTitle", preparerTitle) :
                new ObjectParameter("preparerTitle", typeof(string));
    
            var preparerPhoneParameter = preparerPhone != null ?
                new ObjectParameter("preparerPhone", preparerPhone) :
                new ObjectParameter("preparerPhone", typeof(string));
    
            var preparerEmailParameter = preparerEmail != null ?
                new ObjectParameter("preparerEmail", preparerEmail) :
                new ObjectParameter("preparerEmail", typeof(string));
    
            var pCISProviderNameParameter = pCISProviderName != null ?
                new ObjectParameter("PCISProviderName", pCISProviderName) :
                new ObjectParameter("PCISProviderName", typeof(string));
    
            var pCISProviderTitleParameter = pCISProviderTitle != null ?
                new ObjectParameter("PCISProviderTitle", pCISProviderTitle) :
                new ObjectParameter("PCISProviderTitle", typeof(string));
    
            var pCISProviderPhoneParameter = pCISProviderPhone != null ?
                new ObjectParameter("PCISProviderPhone", pCISProviderPhone) :
                new ObjectParameter("PCISProviderPhone", typeof(string));
    
            var pCISProviderEmailParameter = pCISProviderEmail != null ?
                new ObjectParameter("PCISProviderEmail", pCISProviderEmail) :
                new ObjectParameter("PCISProviderEmail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCertification", cicoidParameter, fiscalYearParameter, atCodeParameter, certCompleteParameter, dateCertifiedParameter, cEONameParameter, cEOTitleParameter, preparerNameParameter, preparerTitleParameter, preparerPhoneParameter, preparerEmailParameter, pCISProviderNameParameter, pCISProviderTitleParameter, pCISProviderPhoneParameter, pCISProviderEmailParameter);
        }
    
        public virtual ObjectResult<GetOrdinance> GetOrdinance(string cicoid, Nullable<int> currentYear)
        {
            var cicoidParameter = cicoid != null ?
                new ObjectParameter("cicoid", cicoid) :
                new ObjectParameter("cicoid", typeof(string));
    
            var currentYearParameter = currentYear.HasValue ?
                new ObjectParameter("currentYear", currentYear) :
                new ObjectParameter("currentYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOrdinance>("GetOrdinance", cicoidParameter, currentYearParameter);
        }
    
        public virtual ObjectResult<pr_CheckCompletedYears1_Result1> pr_CheckCompletedYears1(string cicoid, Nullable<int> current)
        {
            var cicoidParameter = cicoid != null ?
                new ObjectParameter("cicoid", cicoid) :
                new ObjectParameter("cicoid", typeof(string));
    
            var currentParameter = current.HasValue ?
                new ObjectParameter("current", current) :
                new ObjectParameter("current", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pr_CheckCompletedYears1_Result1>("pr_CheckCompletedYears1", cicoidParameter, currentParameter);
        }
    
        public virtual ObjectResult<CheckCertificationsDashboard> CheckCertificationsDashboard(string cicoid, Nullable<int> current)
        {
            var cicoidParameter = cicoid != null ?
                new ObjectParameter("cicoid", cicoid) :
                new ObjectParameter("cicoid", typeof(string));
    
            var currentParameter = current.HasValue ?
                new ObjectParameter("current", current) :
                new ObjectParameter("current", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckCertificationsDashboard>("CheckCertificationsDashboard", cicoidParameter, currentParameter);
        }
    }
}
